on: issue_comment
name: Issue Comments
jobs:
  check_comments:
    name: Check comments for /test
    runs-on: ubuntu-latest
    steps:
      - name: Check for Command
        id: command
        uses: xt0rted/slash-command-action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: merge
          reaction: "true"
          reaction-type: "eyes"
          allow-edits: "false"
          permission-level: admin
      - name: Act on the command ('')
        if: steps.command.outputs.command-name == 'merge' && steps.command.outputs.command-arguments == ''
        run: echo "The command was '${{ steps.command.outputs.command-name }}' with arguments '${{ steps.command.outputs.command-arguments }}'"
      - name: Act on the command ('ready')
        if: steps.command.outputs.command-name == 'merge' && steps.command.outputs.command-arguments == 'ready'
        run: echo "The command was '${{ steps.command.outputs.command-name }}' with arguments '${{ steps.command.outputs.command-arguments }}'"
      - uses: actions/github-script@v3
        if: steps.command.outputs.command-name == 'merge' && steps.command.outputs.command-arguments == 'ready'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Mainainer can merge now'
            })

      - name: automerge
        if: steps.command.outputs.command-name == 'merge' && steps.command.outputs.command-arguments == ''
        uses: "pascalgn/automerge-action@v0.13.1"
        env:
          GITHUB_TOKEN: "${{ secrets.MERGE }}"
          MERGE_LABELS: "Triage,!work in progress"
          MERGE_REMOVE_LABELS: "Triage"
          MERGE_METHOD: "merge"
          MERGE_COMMIT_MESSAGE: "pull-request-title"
          MERGE_FORKS: "true"
          MERGE_RETRIES: "6"
          MERGE_RETRY_SLEEP: "10000"
          UPDATE_LABELS: ""
          UPDATE_METHOD: "rebase"
      # - name: Merge
      #   if: steps.command.outputs.command-name == 'merge' && steps.command.outputs.command-arguments == ''
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{secrets.MERGE}}
      #     script: |
      #       github.pulls.merge({
      #         pull_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         merge_method: 'squash',
      #         commit_title: 'Title',
      #         commit_message: 'Description'
      #       })

